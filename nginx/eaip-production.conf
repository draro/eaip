# eAIP - Multi-Domain Nginx Configuration with Rate Limiting
# Handles main app domain (eaip.flyclim.com) AND all custom domains (e.g., demoaip.flyclim.com)
# Place this file at: /etc/nginx/sites-available/eaip
# Symlink to: /etc/nginx/sites-enabled/eaip

# ============================================
# Rate Limiting Zones
# ============================================
# Define these at http level (add to /etc/nginx/nginx.conf or include this file there)

# Zone for general API requests
# 10MB zone = ~160,000 IP addresses
# Rate: 100 requests per minute (1.67 req/sec) per IP
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;

# Zone for authentication requests (strictest)
# Rate: 5 requests per minute per IP
limit_req_zone $binary_remote_addr zone=auth_limit:5m rate=5r/m;

# Zone for file uploads (moderate)
# Rate: 20 requests per minute per IP
limit_req_zone $binary_remote_addr zone=upload_limit:10m rate=20r/m;

# Zone for search/query endpoints (moderate)
# Rate: 30 requests per minute per IP
limit_req_zone $binary_remote_addr zone=search_limit:10m rate=30r/m;

# Zone for static assets (very lenient)
# Rate: 200 requests per minute per IP
limit_req_zone $binary_remote_addr zone=static_limit:10m rate=200r/m;

# Connection limit per IP
# Maximum 10 concurrent connections from same IP
limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

# ============================================
# HTTP to HTTPS Redirect (All Domains)
# ============================================
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;

    # Allow Let's Encrypt verification
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# ============================================
# HTTPS Server (All Domains)
# ============================================
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name eaip.flyclim.com;  # Catch all domains (main + custom domains)

    # SSL Certificates
    # Make sure you have wildcard cert OR individual certs for each domain
    ssl_certificate /etc/letsencrypt/live/eaip.flyclim.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/eaip.flyclim.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/eaip.flyclim.com/chain.pem;

    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';

    # SSL Session Settings
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Increase max upload size for documents
    client_max_body_size 100M;
    client_body_buffer_size 128k;

    # Apply connection limit to entire server
    limit_conn conn_limit 10;

    # Rate limit configuration
    limit_req_status 429;
    limit_conn_status 429;

    # Logging
    access_log /var/log/nginx/eaip_access.log;
    error_log /var/log/nginx/eaip_error.log warn;

    # Custom error page for rate limiting
    error_page 429 /429.json;
    location = /429.json {
        internal;
        default_type application/json;
        return 429 '{"success": false, "error": "Too many requests. Please try again later.", "code": "RATE_LIMIT_EXCEEDED"}';
    }

    # Health check endpoint (no rate limiting)
    location = /api/health {
        proxy_pass http://localhost:3000;
        access_log off;

        # CRITICAL: Forward original hostname
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
    }

    # Authentication endpoints (STRICTEST rate limiting)
    location ~ ^/api/auth/(signin|callback|signout|register|reset-password|verify) {
        # Rate limit: 5 requests per minute, allow burst of 3
        limit_req zone=auth_limit burst=3 nodelay;

        # Log rate limit events separately
        access_log /var/log/nginx/auth_ratelimit.log combined;

        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;

        # CRITICAL: Preserve original hostname for domain-based auth
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        proxy_connect_timeout 30;
        proxy_send_timeout 30;
        proxy_read_timeout 30;
    }

    # File upload endpoints (moderate rate limiting)
    location ~ ^/api/(dms/upload|documents/upload|dms/files) {
        # Rate limit: 20 requests per minute, allow burst of 5
        limit_req zone=upload_limit burst=5 nodelay;

        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;

        # CRITICAL: Forward hostname for tenant detection
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        # Extended timeouts for large uploads
        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
        send_timeout 600;
    }

    # Search endpoints (moderate rate limiting)
    location ~ ^/api/(search|documents/search|users/search|organizations/search) {
        # Rate limit: 30 requests per minute, allow burst of 10
        limit_req zone=search_limit burst=10 nodelay;

        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;

        # CRITICAL: Forward hostname for tenant detection
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
        send_timeout 600;
    }

    # General API endpoints (standard rate limiting)
    location /api {
        # Rate limit: 100 requests per minute, allow burst of 20
        limit_req zone=api_limit burst=20 nodelay;

        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;

        # CRITICAL: Forward hostname for tenant detection
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
        send_timeout 600;
    }

    # Next.js static assets (lenient rate limiting)
    location /_next/static/ {
        # Rate limit: 200 requests per minute, allow burst of 50
        limit_req zone=static_limit burst=50 nodelay;

        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;

        expires 365d;
        add_header Cache-Control "public, max-age=31536000, immutable";
        access_log off;
    }

    # Public static files (lenient rate limiting)
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp|woff|woff2|ttf|eot|css|js)$ {
        # Rate limit: 200 requests per minute, allow burst of 50
        limit_req zone=static_limit burst=50 nodelay;

        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;

        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        access_log off;
    }

    # Uploads directory (moderate rate limiting)
    location /uploads/ {
        # Rate limit: 30 requests per minute, allow burst of 10
        limit_req zone=search_limit burst=10 nodelay;

        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;

        expires 7d;
        add_header Cache-Control "public, max-age=604800";
    }

    # Sitemap and robots.txt (lenient)
    location ~ ^/(sitemap\.xml|robots\.txt)$ {
        # Rate limit: 30 requests per minute, allow burst of 10
        limit_req zone=search_limit burst=10 nodelay;

        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;

        expires 1h;
        add_header Cache-Control "public, max-age=3600";
    }

    # All other requests (standard rate limiting)
    location / {
        # Rate limit: 100 requests per minute, allow burst of 20
        limit_req zone=api_limit burst=20 nodelay;

        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;

        # CRITICAL: Must preserve Host header for middleware routing
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        proxy_connect_timeout 60;
        proxy_send_timeout 60;
        proxy_read_timeout 60;
        send_timeout 60;
    }

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1024;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/xml
        application/xml+rss
        application/json
        application/ld+json
        image/svg+xml
        font/truetype
        font/opentype
        application/font-woff
        application/font-woff2;

    gzip_disable "msie6";
}

# ============================================
# Rate Limiting Test Commands
# ============================================
# Test authentication rate limit (should block after 8 requests):
#   for i in {1..10}; do curl -X POST https://eaip.flyclim.com/api/auth/signin \
#     -H "Content-Type: application/json" \
#     -d '{"email":"test@example.com","password":"wrong"}'; done
#
# Test API rate limit (should block after 120 requests):
#   for i in {1..150}; do curl https://eaip.flyclim.com/api/documents; done
#
# Monitor rate limit logs:
#   tail -f /var/log/nginx/auth_ratelimit.log
#   tail -f /var/log/nginx/eaip_error.log | grep 'limiting requests'
#
# View rate limit statistics:
#   grep -c 'limiting requests' /var/log/nginx/eaip_error.log
